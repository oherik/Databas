All attributes are given by: 
S={courseCode, courseMaxStudents,courseCredit, classificationName, grade, courseName, departmentName, departmentAbbrevation, programmeName, programmeAbbreviation, studentSchoolID, studentNationalID, studentName, studentCredit, branchName, timeDateRegistredOnWaiting}

The functional dependencies found: 
{courseCode} -> {courseMaxStudents, courseCredit, departmentName, departmentAbbrevation}
{departmentAbbrevation} -> {departmentName}
{departmentName} -> {departmentAbbrevation}
{programmeName} -> {programmeAbbreviation}
{studentNationalID} -> {studentName, studentSchoolID, studentCredit, branchName, programmeName, programmeAbbreviation}
{studentNationalID, courseCode} -> {timeDateRegistredOnWaiting, grade}
{studentSchoolID} -> {studentName, studentNationalID, studentCredit, branchName, programmeName, programmeAbbreviation}
{studentSchoolID, courseCode} -> {timeDateRegistredOnWaiting, grade}
{timeDateRegistredOnWaiting,timeDateRegistredOnWaiting, courseCode} -> {studentNationalID}
(describing which student that is first in line)

Almost all of above are visible in our E-R diagram, except the following: 
{departmentName} -> {departmentAbbreviation}. To solve this we have added the unique constraint to departmentName, and thus, if we have a departmentName we also get the key (departmentAbbreviation). 
{studentSchoolID, courseCode} -> {timeDateRegistredOnWaiting, grade}
{studentSchoolID} -> {studentName, studentNationalID, studentCredit, branchName, programmeName, programmeAbbreviation}, To solve this we have added the unique constraint to schoolID, therefor studentNationalID can be reached from studentSchoolID and everything else can be reached from studentNationalID. 
{studentNationalID -> programmeAbbreviation},
{courseCode -> departmentName},
Since both of them are BCNF violations, they arenâ€™t inserted in our schema. This since {studentNationalID} -> {programmeAbbreviation} can be written as the dependencies {studentNationalID} -> {programmeName} && {programmeName} -> {programmeAbbreviation}. Likewise, {courseCode} -> {departmentName} can be given from {courseCode} -> {departmentAbbrevation} && {departmentAbbrevation} -> {departmentName} 
